<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/mvc 
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd">

	<mvc:annotation-driven />
	<!-- aspectj aop启用CGliB代理 -->
	<aop:aspectj-autoproxy expose-proxy="true"
		proxy-target-class="true" />
	<context:component-scan base-package="com.qiu.controller" />
	<!-- velocity解析器,替换掉原来的jsp -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
		<property name="contentType" value="text/html;charset=UTF-8" />
		<property name="suffix" value=".html" />
		<property name="requestContextAttribute" value="rc" />
		<property name="dateToolAttribute">
			<value>dateTool</value>
		</property>
		<property name="numberToolAttribute">
			<value>numberTool</value>
		</property>
	</bean>

	<bean id="velocityConfigurer"
		class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath">
			<value>classpath:templates</value>
		</property>
		<!-- <property name="configLocation" value="classpath:velocity.properties" 
			/> velocity配置路径 -->
		<property name="velocityProperties">
			<props>
				<prop key="input.encoding">UTF-8</prop>
				<prop key="output.encoding">UTF-8</prop>
				<prop key="contentType">text/html;charset=UTF-8</prop>
				<!-- 防止XSS攻击 -->
				<prop key="eventhandler.referenceinsertion.class">org.apache.velocity.app.event.implement.EscapeHtmlReference
				</prop>
				<!--<prop key="velocimacro.library">macro/macros.vm</prop> -->
				<prop key="file.resource.loader.cache">true</prop>
			</props>
		</property>
	</bean>
	<!-- 配置哪些是静态资源，缺省Servlet 直接返回 -->
	<mvc:resources mapping="/static/**" location="/static/"
		cache-period="31556926" />
	<mvc:resources mapping="/upload/**" location="/upload/"
		cache-period="31556926" />
	<mvc:resources mapping="/favicon.ico" location="/static/style/images/favicon.ico"
		cache-period="31556926" />

	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="false">
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
			</bean>
			<!-- 下载使用 -->
			<bean
				class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
			<bean
				class="org.springframework.http.converter.ResourceHttpMessageConverter" />
			<bean
				class="org.springframework.http.converter.ResourceRegionHttpMessageConverter" />
			<!-- json -->
			<ref bean="jacksonMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>

	<bean id="jacksonObjectMapper" class="com.qiu.commons.scan.JacksonObjectMapper"></bean>

	<bean id="jacksonMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
		<property name="objectMapper" ref="jacksonObjectMapper" />
	</bean>

	<!-- hibernate-Validator -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
	</bean>
	<bean
		class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor" />

	<!-- 使用spring servlet3.0 默认上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.support.StandardServletMultipartResolver" />
</beans>